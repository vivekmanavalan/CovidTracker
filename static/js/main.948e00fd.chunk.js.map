{"version":3,"sources":["Components/Images/tribute.mp4","Components/Images/guidelines.mp4","Components/Images/image.png","Components/Card/Cards.module.css","Components/Api/index.js","Components/Card/Card.js","Components/Chart/Chart.js","Components/CountryPicker/Country.js","Components/CountryPicker/States.js","Components/Card/StateCard.js","Components/Chart/StateChart.js","Components/Home.js","Components/Guidelines/Guidelines.js","Components/SideBar/DrawerToggleButton.js","Components/Nav/Nav.js","Components/SideBar/SideDrawer.js","App.js","serviceWorker.js","index.js","Components/Chart/Chart.module.css","Components/Guidelines/Guidelines.module.css","Components/SideBar/Drawer.module.css","Components/SideBar/SideDrawer.module.css","Components/CountryPicker/State.module.css","Components/Nav/Nav.module.css","App.css","Components/CountryPicker/Country.module.css"],"names":["module","exports","url","fetchCardData","country","index","a","changeableUrl","axios","get","data","modifiedData","confirmed","statewise","active","recovered","deaths","fetchChartData","map","date","reportDate","total","fetchCountries","countries","name","fetchIndianStates","regional","state","loc","fetchStatesData","calculateActive","confirmedCasesIndian","confirmedCasesForeign","discharged","fetchDistricts","districtList","districtData","state_name","stateName","console","log","Object","keys","fetchDistrictData","districtName","deceased","card","props","className","styles","container","Grid","spacing","justify","item","xs","md","component","Card","cx","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","Date","lastUpdate","toDateString","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","length","Country","handleCountryChange","handleStateChange","setcountry","fetchData","classes","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","FetchStates","handleDistrictChange","states","setstates","Select","MenuItem","district","statecard","StateChart","Home","setState","isIndia","isState","this","onClick","click","StateCard","States","Component","guideLines","divlines","width","height","controls","src","GuidelineVideo","Tribute","drawerToggleButton","toggleButton","toggleButton_line","toolbar","nav_div","nav_drawer","handleSideDrawer","nav_logo","image","alt","sideDrawer","show","side_drawer","side_drawer_ul","to","side_drawer_close","App","prevState","handleSideDrawerClose","type","num","config","position","zIndex","top","left","bg","Nav","SideDrawer","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,+ECC3CD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,wBAAwB,SAAW,0BAA0B,UAAY,0BAA0B,OAAS,4B,gLCErKC,EAAI,iCAEGC,EAAa,uCAAG,WAAOC,EAAQC,GAAf,uBAAAC,EAAA,yDACrBC,EAAgBL,EACR,SAATE,EAFsB,wBAIrBG,EAAgB,yCAJK,kBAMEC,IAAMC,IAAIF,GANZ,uBAMbG,EANa,EAMbA,KACFC,EAAe,CACjBC,UAAWF,EAAKG,UAAU,GAAGC,OAC7BC,UAAWL,EAAKG,UAAU,GAAGE,UAC7BC,OAAQN,EAAKG,UAAU,GAAGG,QAVT,kBAYdL,GAZc,wGAmBvBP,IACFG,EAAa,UAAML,EAAN,sBAAuBE,IApBX,oBAuBFI,IAAMC,IAAIF,GAvBR,eAuBfG,EAvBe,yBAwBdA,GAxBc,oIAAH,wDAgCbO,EAAc,uCAAG,8BAAAX,EAAA,+EAECE,IAAMC,IAAN,UAAaP,EAAb,WAFD,uBAEdQ,EAFc,EAEdA,KAFc,kBAGfA,EAAKQ,KAAI,gBAAEN,EAAF,EAAEA,UAAWI,EAAb,EAAaA,OAAoBG,EAAjC,EAAqBC,WAArB,MAA2C,CAACR,UAAWA,EAAUS,MAAOL,OAAQA,EAAOK,MAAOF,YAHxF,wHAAH,qDAUdG,EAAc,uCAAG,8BAAAhB,EAAA,+EAGCE,IAAMC,IAAN,UAAaP,EAAb,eAHD,uBAGdQ,EAHc,EAGdA,KAHc,kBAIfA,EAAKa,UAAUL,KAAI,SAACd,GAAD,OAAYA,EAAQoB,SAJxB,wHAAH,qDAUdC,EAAiB,uCAAG,8BAAAnB,EAAA,+EAGNE,IAAMC,IAAI,kDAHJ,uBAGrBC,EAHqB,EAGrBA,KAHqB,kBAItBA,EAAKA,KAAKgB,SAASR,KAAI,SAACS,GAAD,OAAWA,EAAMC,QAJlB,wHAAH,qDAUjBC,EAAe,uCAAG,WAAOF,GAAP,uBAAArB,EAAA,+EAGHE,IAAMC,IAAI,kDAHP,uBAGlBC,EAHkB,EAGlBA,KACJoB,EAAkBpB,EAAKA,KAAKgB,SAASC,GAAOI,qBAAuBrB,EAAKA,KAAKgB,SAASC,GAAOK,sBAAwBtB,EAAKA,KAAKgB,SAASC,GAAOM,WAAavB,EAAKA,KAAKgB,SAASC,GAAOX,OAJhK,SAKCkB,EAAexB,EAAKA,KAAKgB,SAASC,GAAOC,KAL1C,cAKpBO,EALoB,OAMpBxB,EAAe,CAClByB,aAAcD,EACdvB,UAAWkB,EACXf,UAAWL,EAAKA,KAAKgB,SAASC,GAAOM,WACrCjB,OAAQN,EAAKA,KAAKgB,SAASC,GAAOX,OAClCqB,WAAY3B,EAAKA,KAAKgB,SAASC,GAAOC,KAXf,kBAanBjB,GAbmB,2HAAH,sDAmBfuB,EAAc,uCAAG,WAAOI,GAAP,iBAAAhC,EAAA,sEAGX,sBAAXgC,IACCA,EAAU,4CAJW,SAMA9B,IAAMC,IAAI,yDANV,uBAMhBC,EANgB,EAMhBA,KACT6B,QAAQC,IAAI,YAAaF,GACzBC,QAAQC,IAAI,qBAAsB9B,EAAK4B,IARd,kBASlBG,OAAOC,KAAKhC,EAAK4B,GAAWF,eATV,2HAAH,sDAgBdO,EAAiB,uCAAG,WAAOL,EAAWM,GAAlB,mBAAAtC,EAAA,sEAEX,sBAAXgC,IACCA,EAAU,4CAHW,SAKF9B,IAAMC,IAAI,yDALR,uBAKjBC,EALiB,EAKjBA,KACR6B,QAAQC,IAAI,SAASI,GACrBL,QAAQC,IAAI,SAAS9B,EAAK4B,GAAWF,aAAaQ,IAC5CjC,EAAe,CACjBC,UAAWF,EAAK4B,GAAWF,aAAaQ,GAAc9B,OACtDC,UAAWL,EAAK4B,GAAWF,aAAaQ,GAAc7B,UACtDC,OAAQN,EAAK4B,GAAWF,aAAaQ,GAAcC,UAEvDN,QAAQC,IAAI,cAAc7B,GAbD,kBAclBA,GAdkB,4FAAH,wD,uFClDfmC,EA9CH,SAACC,GACT,OAAGA,EAAMrC,KAAKE,UAEV,yBAAKoC,UAAWC,IAAOC,WACvB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UACnC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOW,WAC7D,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKE,UAAUwD,MAAOC,SAAU,KAElE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIO,KAAKvB,EAAMrC,KAAK6D,YAAYC,gBACnE,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,4BAGJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOH,KAAMG,IAAOlC,YAC7E,kBAAC8C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKK,UAAUqD,MAAOC,SAAU,KAElE,kBAACP,EAAA,EAAD,KAAa,IAAIQ,KAAKvB,EAAMrC,KAAK6D,YAAYC,gBAC7C,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,+BAGJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOH,KAAMG,IAAOjC,SAC7E,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKM,OAAOoD,MAAOC,SAAU,KAE/D,kBAACP,EAAA,EAAD,KAAa,IAAIQ,KAAKvB,EAAMrC,KAAK6D,YAAYC,gBAC7C,kBAACV,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,8BAUH,0C,iCC6BMgB,EAxED,SAAC,GAAyD,IAAD,IAAtD/D,KAAQE,EAA8C,EAA9CA,UAAWG,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAUZ,EAAc,EAAdA,QAAc,EACjCsE,mBAAS,IADwB,mBAC5DC,EAD4D,KACjDC,EADiD,KAGnEC,qBAAU,YACQ,uCAAG,4BAAAvE,EAAA,sEACcW,IADd,OACX6D,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJpE,EACE,kBAAC,IAAD,CACEF,KAAM,CACJuE,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClE1E,KAAM,CAACE,EAAUwD,MAAOrD,EAAUqD,MAAOpD,EAAOoD,UAItDiB,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBrF,OAGpD,KAGAsF,EACJf,EAAU,GACR,kBAAC,IAAD,CACEjE,KAAM,CACJuE,OAAQN,EAAUzD,KAAI,qBAAGC,QACzB+D,SAAU,CAAC,CACTxE,KAAMiE,EAAUzD,KAAI,SAACR,GAAD,OAAUA,EAAKE,aACnCuE,MAAO,WACPQ,YAAa,UACbC,MAAM,GACL,CACDlF,KAAMiE,EAAUzD,KAAI,SAACR,GAAD,OAAUA,EAAKM,UACnCmE,MAAO,SACPQ,YAAa,MACbP,gBAAiB,uBACjBQ,MAAM,OAKV,KAGN,OAAGxF,EAAQyF,OAAO,EAEhB,yBAAK7C,UAAWC,IAAOC,WACpB8B,GAMD,yBAAKhC,UAAWC,IAAOC,WACpBwC,I,mCCxCII,EA1BC,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,oBAA2C,KAAvBC,kBACRtB,mBAAS,KADsB,mBACtDtE,EADsD,KAC7C6F,EAD6C,KAWzD,OATJpB,qBAAW,YACQ,uCAAG,4BAAAvE,EAAA,sEACSgB,IADT,OACPlB,EADO,OAEb6F,EAAY7F,GAFC,2CAAH,qDAKf8F,KACF,IAGI,yBAAKlD,UAAWmD,IAAQjD,WAAxB,gCAC6B,6BAAS,6BACtC,kBAACkD,EAAA,EAAD,CAAapD,UAAWmD,IAAQE,aAE9B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAMV,EAAoBU,EAAEC,OAAOtC,SACvE,4BAAQA,MAAM,IAAd,UACChE,EAAQc,KAAI,SAACd,EAASuG,GAAV,OACT,4BAAQC,IAAKD,EAAGvC,MAAOhE,GAAUA,U,mCCqClCyG,EAzDM,SAAC,GAA+D,IAA7Db,EAA4D,EAA5DA,kBAAmB5D,EAAyC,EAAzCA,aAAc0E,EAA2B,EAA3BA,qBACrDvE,QAAQC,IAAI,SAASJ,GAD2D,MAEpDsC,mBAAS,IAF2C,mBAEzEqC,EAFyE,KAEjEC,EAFiE,KAWhF,OAPAnC,qBAAW,YACQ,uCAAG,4BAAAvE,EAAA,sEACCmB,IADD,OACZf,EADY,OAElBsG,EAAUtG,GAFQ,2CAAH,qDAIfwF,KACF,IAEE,yBAAKlD,UAAWC,IAAOC,WAClB,yBAAKF,UAAWC,IAAOoD,aAQpB,kBAACY,EAAA,EAAD,CAAQV,aAAa,aAAaC,SAAU,SAACC,GACzCT,EAAkBS,EAAEC,OAAOtC,SAE3B,kBAAC8C,EAAA,EAAD,CAAU9C,MAAM,cAAhB,cACC2C,EAAO7F,KAAI,SAACS,EAAMgF,GAAP,OACV,kBAACO,EAAA,EAAD,CAAUN,IAAKD,EAAGvC,MAAOuC,GAAIhF,QAd3C,gBAqBQ,yBAAKqB,UAAWC,IAAOoD,aACvB,kBAACY,EAAA,EAAD,CAAQV,aAAa,gBAAgBC,SAAU,SAACC,GAAD,OAAMK,EAAqBL,EAAEC,OAAOtC,SAC/E,kBAAC8C,EAAA,EAAD,CAAU9C,MAAM,iBAAhB,iBACChC,EAAalB,KAAI,SAACiG,GAAD,OACf,kBAACD,EAAA,EAAD,CAAUN,IAAKO,EAAU/C,MAAO+C,GAAWA,UCOnDC,EA3CE,SAACrE,GACd,OAAGA,EAAMrC,KAEL,yBAAKsC,UAAWC,IAAOC,WACvB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UACnC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOW,WAC7D,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKE,UAAWyD,SAAU,KAE5D,kBAACP,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,4BAGJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOH,KAAMG,IAAOlC,YAC7E,kBAAC8C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKK,UAAWsD,SAAU,KAE5D,kBAACP,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,+BAGJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMV,UAAWW,IAAGV,IAAOH,KAAMG,IAAOjC,SAC7E,kBAAC6C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKR,UAAU,MAC/B,kBAAC,IAAD,CAASS,MAAO,EAAGC,IAAKpB,EAAMrC,KAAKM,OAAQqD,SAAU,KAEzD,kBAACP,EAAA,EAAD,CAAYG,QAAQ,QAAOR,UAAU,KAArC,8BAUH,0CCZM4D,EA7BI,SAACtE,GAEhB,IAAMiC,EACJjC,EAAMrC,KACJ,kBAAC,IAAD,CACEA,KAAM,CACJuE,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,wBAClE1E,KAAM,CAACqC,EAAMrC,KAAKE,UAAWmC,EAAMrC,KAAKK,UAAWgC,EAAMrC,KAAKM,WAIpEqE,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAM,8CAGhC,KAGN,OACI,yBAAKzC,UAAWmD,IAAQjD,WACnB8B,ICsDEsC,G,kDAxEb,WAAYvE,GAAO,IAAD,8BAChB,cAAMA,IAkBRgD,oBAnBkB,uCAmBI,WAAO3F,GAAP,eAAAE,EAAA,sEACDH,EAAcC,EAAS,EAAKuB,MAAMtB,OADjC,OACdK,EADc,OAER,SAATN,EACD,EAAKmH,SAAS,CAAE7G,OAAMN,QAASA,EAASoH,SAAS,EAAMlF,UAAU,GAAIF,aAAc,KAGrF,EAAKmF,SAAS,CAAE7G,KAAKA,EAAKA,KAAMN,QAASA,EAASoH,SAAS,EAAOlF,UAAU,GAAIF,aAAc,KAN1E,2CAnBJ,wDA6BlB4D,kBA7BkB,uCA6BE,WAAO3F,GAAP,eAAAC,EAAA,yDACR,cAAPD,EADe,gBAEd,EAAK0F,oBAAoB,SAFX,sCAKClE,EAAgBxB,GALjB,OAKZK,EALY,OAMlB,EAAK6G,SAAS,CAAE7G,OAAM0B,aAAc1B,EAAK0B,aAAc/B,MAAOA,EAAOoH,SAAS,EAAMnF,UAAW5B,EAAK2B,aANlF,2CA7BF,wDAuClByE,qBAvCkB,uCAuCK,WAAOlE,GAAP,eAAAtC,EAAA,yDACH,iBAAfsC,EADkB,gBAEnB,EAAKoD,kBAAkB,EAAKrE,MAAMtB,OAFf,sCAKFsC,EAAkB,EAAKhB,MAAMW,UAAUM,GALrC,OAKflC,EALe,OAMrB,EAAK6G,SAAS,CAAC7G,SANM,2CAvCL,sDAEhB,EAAKiB,MAAM,CACTjB,KAAK,GACL0B,aAAa,GACbhC,QAAQ,IACRkC,UAAW,GACXkF,SAAS,EACTnH,MAAO,GARO,E,gMAaMF,I,OAAdO,E,OACNgH,KAAKH,SAAS,CACZ7G,KAAMA,EAAKA,O,qIAmCjB,OACE,yBAAKsC,UAAWmD,IAAQjD,WAExBwE,KAAK/F,MAAM6F,QACX,yBAAKG,QAASD,KAAK3E,MAAM6E,OACvB,kBAACC,EAAD,CAAWnH,KAAMgH,KAAK/F,MAAMjB,OAC5B,kBAAC,EAAD,CAASqF,oBAAsB2B,KAAK3B,sBACnC,kBAAC+B,EAAD,CAAQ9B,kBAAoB0B,KAAK1B,kBAAmB5D,aAAcsF,KAAK/F,MAAMS,aAAa0E,qBAAwBY,KAAKZ,uBACvH,kBAAC,EAAD,CAAYpG,KAAMgH,KAAK/F,MAAMjB,QAG9B,yBAAKiH,QAASD,KAAK3E,MAAM6E,OACzB,kBAAC,EAAD,CAAMlH,KAAMgH,KAAK/F,MAAMjB,OACvB,kBAAC,EAAD,CAASqF,oBAAsB2B,KAAK3B,sBACpC,kBAAC,EAAD,CAAOrF,KAAMgH,KAAK/F,MAAMjB,KAAMN,QAASsH,KAAK/F,MAAMvB,gB,GAjErC2H,a,gFCyBJC,GA/BI,SAACjF,GAChB,OACI,6BACI,6BACA,yBAAK4E,QAAS5E,EAAM6E,MAAO5E,UAAWmD,KAAQ8B,UAC9C,wBAAIjF,UAAWmD,KAAQ3E,MAAvB,eAEA,6BACA,yBAAKmG,QAAS5E,EAAM6E,OACpB,6BACA,2BAAOM,MAAM,OAAOC,OAAO,MAAMC,UAAQ,GACrC,4BAAQC,IAAKC,SAGjB,6BACA,6BACI,yBAAKtF,UAAWmD,KAAQ8B,UACxB,wBAAIjF,UAAWmD,KAAQ3E,MAAvB,YAEA,6BACA,6BACA,2BAAO0G,MAAM,OAAOC,OAAO,MAAMC,UAAQ,GACrC,4BAAQC,IAAKE,a,6DCblBC,GAVY,SAACzF,GACxB,OACI,4BAAQC,UAAWmD,KAAQsC,aAAcd,QAAS5E,EAAM6E,OACpD,yBAAK5E,UAAWmD,KAAQuC,oBACxB,yBAAK1F,UAAWmD,KAAQuC,oBACxB,yBAAK1F,UAAWmD,KAAQuC,sBCWrBC,GAdC,SAAC5F,GACjB,OACI,gCACI,yBAAKC,UAAWmD,KAAQyC,SACpB,yBAAK5F,UAAWmD,KAAQ0C,YACpB,kBAAC,GAAD,CAAcjB,MAAS7E,EAAM+F,oBAEjC,yBAAK9F,UAAWmD,KAAQ4C,UACxB,yBAAKV,IAAKW,KAAQC,IAAI,iB,oBCkBnBC,GA5BI,SAACnG,GAChB,OAAGA,EAAMoG,KAEL,yBAAKnG,UAAWmD,KAAQiD,aACpB,wBAAIpG,UAAWmD,KAAQkD,gBACnB,kBAAC,KAAD,CAAMC,GAAI,KACV,wBAAI3B,QAAS5E,EAAM6E,OAAnB,SAEA,kBAAC,KAAD,CAAM0B,GAAI,eACV,wBAAI3B,QAAS5E,EAAM6E,OAAnB,iBAQJ,yBAAK5E,UAAWmD,KAAQoD,mBACpB,wBAAIvG,UAAWmD,KAAQkD,gBACnB,oCACA,6C,UC6BLG,G,kDA1Cb,WAAYzG,GAAO,IAAD,8BAChB,cAAMA,IAKR+F,iBAAmB,WACjB,EAAKvB,UAAS,SAACkC,GACb,MAAO,CAACP,YAAaO,EAAUP,gBARjB,EAYlBQ,sBAAwB,WACtB,EAAKnC,SAAS,CAAC2B,YAAY,KAX3B,EAAKvH,MAAM,CACTuH,YAAY,GAHE,E,qDAsBhB,OACE,kBAAC,KAAD,KACA,6BACA,kBAAC,KAAD,CAAaS,KAAK,SAAS5F,MAAM,UAAU6F,IAAK,EAAGC,OATzC,CACVC,SAAU,QACVC,QAAS,EACTC,IAAK,EACLC,KAAM,GAK6DC,IAAI,IACvE,kBAACC,GAAD,CAAKrB,iBAAoBpB,KAAKoB,mBAC9B,kBAACsB,GAAD,CAAYjB,KAAMzB,KAAK/F,MAAMuH,WAAYtB,MAAOF,KAAKgC,wBACnD,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAOW,KAAK,eACV,kBAAC,GAAD,CAAYzC,MAAOF,KAAKgC,yBAE1B,kBAAC,KAAD,CAAOW,KAAK,KACV,kBAAC,GAAD,CAAMzC,MAAOF,KAAKgC,gC,GAlCV3B,aCGEuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhJ,QAAQgJ,MAAMA,EAAMC,a,mBExI5BxL,EAAOC,QAAU,CAAC,UAAY,0B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,SAAW,4B,mBCA5DD,EAAOC,QAAU,CAAC,aAAe,0BAA0B,kBAAoB,0B,mBCA/ED,EAAOC,QAAU,CAAC,YAAc,0BAA0B,kBAAoB,yBAAyB,eAAiB,4B,mBCAxHD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,YAAc,4B,mBCAtED,EAAOC,QAAU,CAAC,QAAU,0BAA0B,SAAW,0BAA0B,WAAa,4B,mBCAxGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,4B,mBCAlED,EAAOC,QAAU,CAAC,UAAY,0BAA0B,YAAc,6B","file":"static/js/main.948e00fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tribute.cb3de33c.mp4\";","module.exports = __webpack_public_path__ + \"static/media/guidelines.e722c96e.mp4\";","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2BVgKHsMElWMiQ9KPIDySR\",\"card\":\"I8RDX7vDRFXQGS_OXEEk-\",\"infected\":\"_3Xo_FGGYjDhx7Ni4Coix_g\",\"recovered\":\"_3ciSF6lF2h-Yxae-BUzXSj\",\"deaths\":\"_2e5fGQfMrhM1uU9AYGrZJX\"};","import axios from 'axios';\r\n\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchCardData = async (country,index) =>{\r\n    let changeableUrl = url;\r\n    if(country==\"India\"){\r\n        //if condition to display statewise data\r\n        changeableUrl = \"https://api.covid19india.org/data.json\";\r\n        try {\r\n        const { data } = await axios.get(changeableUrl);\r\n        const modifiedData = {\r\n            confirmed: data.statewise[0].active,\r\n            recovered: data.statewise[0].recovered,\r\n            deaths: data.statewise[0].deaths\r\n        }\r\n        return modifiedData;\r\n        }\r\n        catch (error) {\r\n        return error;   \r\n        }\r\n}\r\nelse{\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n    try {\r\n        const data = await axios.get(changeableUrl);\r\n        return data;\r\n        \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n}\r\n\r\nexport const fetchChartData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        return data.map(({confirmed, deaths, reportDate: date}) =>({confirmed: confirmed.total, deaths: deaths.total, date}));\r\n        \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        //Fetching countries for the dropdown\r\n        const { data } = await axios.get(`${url}/countries`);\r\n        return data.countries.map((country)=> country.name); \r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchIndianStates = async () => {\r\ntry {\r\n    //Getting the state names for dropdown\r\n    const { data } = await axios.get(\"https://api.rootnet.in/covid19-in/stats/latest\");\r\n    return data.data.regional.map((state) => state.loc);\r\n} catch (error) {\r\n    return error;\r\n}\r\n}\r\n\r\nexport const fetchStatesData = async (state) => {\r\n try {\r\n     //Getting states data from the api\r\n     const { data } = await axios.get(\"https://api.rootnet.in/covid19-in/stats/latest\");\r\n     let calculateActive = data.data.regional[state].confirmedCasesIndian + data.data.regional[state].confirmedCasesForeign - data.data.regional[state].discharged - data.data.regional[state].deaths;\r\n     const districtList = await fetchDistricts(data.data.regional[state].loc);\r\n     const modifiedData = {\r\n        districtData: districtList,\r\n        confirmed: calculateActive,\r\n        recovered: data.data.regional[state].discharged,\r\n        deaths: data.data.regional[state].deaths,\r\n        state_name: data.data.regional[state].loc\r\n    }\r\n     return modifiedData;\r\n } catch (error) {\r\n     return error;\r\n }\r\n}\r\n\r\nexport const fetchDistricts = async (stateName) => {\r\n    try {\r\n     //Getting district list with the state name using the stateName parameter\r\n     if(stateName==\"Dadar Nagar Haveli\"){\r\n         stateName=\"Dadra and Nagar Haveli and Daman and Diu\";\r\n     }\r\n     const  { data }  = await axios.get(\"https://api.covid19india.org/state_district_wise.json\");\r\n     console.log(\"statename\", stateName);\r\n     console.log(\"fetchdistrict data\", data[stateName]);\r\n     return Object.keys(data[stateName].districtData);\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\n//Fetching data for each districts\r\nexport const fetchDistrictData = async (stateName, districtName) => {\r\n    try {\r\n        if(stateName==\"Dadar Nagar Haveli\"){\r\n            stateName=\"Dadra and Nagar Haveli and Daman and Diu\";\r\n        }\r\n        const { data } = await axios.get(\"https://api.covid19india.org/state_district_wise.json\");\r\n        console.log(\"dtName\",districtName);\r\n        console.log(\"dtdata\",data[stateName].districtData[districtName]);\r\n        const modifiedData = {\r\n            confirmed: data[stateName].districtData[districtName].active,\r\n            recovered: data[stateName].districtData[districtName].recovered,\r\n            deaths: data[stateName].districtData[districtName].deceased\r\n        }\r\n        console.log(\"modifedData\",modifiedData);\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {Card, Grid, CardContent, Typography} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\n\r\nconst card =(props) =>{\r\n    if(props.data.confirmed){ \r\n    return(\r\n        <div className={styles.container}>    \r\n        <Grid container spacing={3} justify=\"center\">\r\n         <Grid item xs={12} md={3} component={Card} className={cx(styles.infected)}>\r\n            <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.confirmed.value} duration={2} />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">{new Date(props.data.lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of active cases</Typography>\r\n            </CardContent>\r\n         </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.recovered.value} duration={2} />\r\n            </Typography>\r\n            <Typography>{new Date(props.data.lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of recovered cases</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.deaths.value} duration={2} />\r\n            </Typography>\r\n            <Typography>{new Date(props.data.lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of deaths cases</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n    );\r\n    }\r\n    else{\r\n     return(\r\n         <h3>loading..</h3>\r\n     )\r\n    }\r\n}\r\nexport default card;","import React, {useState, useEffect} from 'react';\r\nimport {fetchChartData} from '../Api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n \r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n  \r\n    useEffect(() => {\r\n      const fetchMyAPI = async () => {\r\n        const initialDailyData = await fetchChartData();\r\n  \r\n        setDailyData(initialDailyData);\r\n      };\r\n  \r\n      fetchMyAPI();\r\n    }, []);\r\n  \r\n    const barChart = (\r\n      confirmed ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [\r\n              {\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [confirmed.value, recovered.value, deaths.value],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    const lineChart = (\r\n      dailyData[0] ? (\r\n        <Line\r\n          data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n              data: dailyData.map((data) => data.confirmed),\r\n              label: 'Infected',\r\n              borderColor: '#3333ff',\r\n              fill: true,\r\n            }, {\r\n              data: dailyData.map((data) => data.deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            },\r\n            ],\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    if(country.length>2){\r\n    return (\r\n      <div className={styles.container}>\r\n        {barChart}\r\n      </div>\r\n    );\r\n    }\r\n    else{\r\n      return (\r\n        <div className={styles.container}>\r\n          {lineChart}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {FormControl, NativeSelect} from '@material-ui/core';\r\nimport {fetchCountries}  from '../Api';\r\nimport classes from './Country.module.css';\r\n\r\n\r\nconst Country = ({handleCountryChange,handleStateChange}) => {\r\nconst [country, setcountry] = useState([]);\r\nuseEffect (() => {\r\n    const fetchData = async() =>{\r\n         const country = await fetchCountries();\r\n         setcountry (country);\r\n    }\r\n\r\n    fetchData();\r\n},[]);\r\n\r\n    return(\r\n      <div className={classes.container}>\r\n      Select India for states data <br></br><br></br>\r\n      <FormControl className={classes.formControl}>\r\n        \r\n        <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {country.map((country, i)=>\r\n                <option key={i} value={country}>{country}</option>\r\n            )}\r\n        </NativeSelect>\r\n      </FormControl >\r\n        </div>\r\n);\r\n}\r\nexport default Country;","import React, {useState, useEffect} from 'react';\r\nimport {FormControl, NativeSelect, Select, MenuItem, InputLabel} from '@material-ui/core';\r\nimport {fetchIndianStates} from '../Api';\r\nimport styles from './State.module.css';\r\n\r\nconst FetchStates  = ({ handleStateChange, districtData, handleDistrictChange }) => {\r\n    console.log(\"dtData\",districtData);\r\n    const [states, setstates] = useState([]);\r\n\r\n    useEffect (() =>{\r\n        const fetchData = async() => {\r\n        const data = await fetchIndianStates();\r\n        setstates(data);\r\n        }\r\n        fetchData();\r\n    },[]);\r\n    return(\r\n        <div className={styles.container}>\r\n             <div className={styles.formControl}>\r\n                {/* <NativeSelect defaultValue=\"\" onChange={(e)=>handleStateChange(e.target.value)}>\r\n                    <option value=\"All States\">All States</option>\r\n                    {states.map((state,i)=>\r\n                    <option key={i} value={i}>{state}</option>\r\n                    )}\r\n\r\n                </NativeSelect> &nbsp; */}\r\n                <Select defaultValue=\"All States\" onChange={(e)=> {\r\n                    handleStateChange(e.target.value)\r\n                    }}>\r\n                    <MenuItem value=\"All States\">All States</MenuItem>\r\n                    {states.map((state,i)=>\r\n                      <MenuItem key={i} value={i}>{state}</MenuItem>\r\n                    )}\r\n\r\n                </Select>\r\n                </div>&nbsp;\r\n\r\n                &nbsp;&nbsp;\r\n                <div className={styles.formControl}>\r\n                <Select defaultValue=\"All Districts\" onChange={(e)=> handleDistrictChange(e.target.value)}>\r\n                    <MenuItem value=\"All Districts\">All Districts</MenuItem>\r\n                    {districtData.map((district) =>\r\n                       <MenuItem key={district} value={district}>{district}</MenuItem>  \r\n                    )\r\n                    \r\n                    }\r\n\r\n                </Select> \r\n\r\n                \r\n                {/* &nbsp;<NativeSelect defaultValue=\"\" onChange={(e)=>handleStateChange(e.target.value)}>\r\n                        <option value=\"All States\">All Districts</option>\r\n                        {states.map((state,i)=>\r\n                        <option key={i} value={i}>{state}</option>\r\n                        )}\r\n\r\n                </NativeSelect> */}\r\n                </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default FetchStates;","import React from 'react';\r\nimport {Card, Grid, CardContent, Typography} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\nimport CountUp from 'react-countup';\r\n\r\nconst statecard =(props) =>{\r\n    if(props.data){\r\n    return(\r\n        <div className={styles.container}>    \r\n        <Grid container spacing={3} justify=\"center\">\r\n         <Grid item xs={12} md={3} component={Card} className={cx(styles.infected)}>\r\n            <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.confirmed} duration={2} />\r\n            </Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of active cases</Typography>\r\n            </CardContent>\r\n         </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.recovered} duration={2} />\r\n            </Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of recovered cases</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\r\n        <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n                <CountUp start={0} end={props.data.deaths} duration={2} />\r\n            </Typography>\r\n            <Typography variant=\"body2\"component=\"p\">Number of deaths cases</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n\r\n    </Grid>\r\n    </div>\r\n    );\r\n    }\r\n    else{\r\n     return(\r\n         <h3>loading..</h3>\r\n     )\r\n    }\r\n}\r\nexport default statecard;","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport classes from './Chart.module.css';\r\n \r\nconst StateChart = (props) => {\r\n  \r\n    const barChart = (\r\n      props.data ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [\r\n              {\r\n                label: 'People',\r\n                backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                data: [props.data.confirmed, props.data.recovered, props.data.deaths],\r\n              },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: \"Current condition in the selected state\" },\r\n          }}\r\n        />\r\n      ) : null\r\n    );\r\n  \r\n    return(\r\n        <div className={classes.container}>\r\n            {barChart}\r\n        </div>\r\n    )\r\n  };\r\nexport default StateChart;","import React, { Component } from 'react';\r\nimport classes from '../App.css';\r\nimport {fetchCardData, fetchStatesData, fetchDistricts, fetchDistrictData} from'./Api';\r\nimport Card from './Card/Card';\r\nimport Chart from './Chart/Chart';\r\nimport Country from './CountryPicker/Country';\r\nimport States from './CountryPicker/States';\r\nimport StateCard from './Card/StateCard';\r\nimport StateChart from './Chart/StateChart';\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      data:{},\r\n      districtData:[],\r\n      country:' ',\r\n      stateName: '',\r\n      isIndia: false,\r\n      index: 0,\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n      const data  = await fetchCardData();\r\n      this.setState({\r\n        data: data.data,\r\n      })\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchCardData(country, this.state.index );\r\n    if(country==\"India\"){\r\n      this.setState({ data, country: country, isIndia: true, stateName:'', districtData: [] });\r\n    }\r\n    else{\r\n    this.setState({ data:data.data, country: country, isIndia: false, stateName:'', districtData: [] });\r\n    }\r\n  }\r\n\r\n  handleStateChange = async (index) => {\r\n    if(index==\"All States\"){\r\n        this.handleCountryChange(\"India\");\r\n    }\r\n    else{\r\n    const data = await fetchStatesData(index);\r\n    this.setState({ data, districtData: data.districtData, index: index, isState: true, stateName: data.state_name});\r\n    }\r\n  }\r\n\r\n  handleDistrictChange = async (districtName) => {\r\n    if(districtName== \"All Districts\"){\r\n      this.handleStateChange(this.state.index);\r\n    }\r\n    else{\r\n    const data = await fetchDistrictData(this.state.stateName,districtName);\r\n    this.setState({data})\r\n    }\r\n  }\r\n\r\n  render(){  \r\n  return (\r\n    <div className={classes.container}>\r\n    {\r\n    this.state.isIndia ?\r\n    <div onClick={this.props.click}>\r\n      <StateCard data={this.state.data}/> \r\n      <Country handleCountryChange= {this.handleCountryChange}/>\r\n       <States handleStateChange ={this.handleStateChange} districtData={this.state.districtData}handleDistrictChange = {this.handleDistrictChange} />  \r\n       <StateChart data={this.state.data}/>\r\n       </div>\r\n      :\r\n      <div onClick={this.props.click}>\r\n      <Card data={this.state.data}/> \r\n      <Country handleCountryChange= {this.handleCountryChange}/>\r\n      <Chart data={this.state.data} country={this.state.country}/>\r\n      </div>\r\n  }\r\n    </div>\r\n  );\r\n  }\r\n  }\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Tribute from '../Images/tribute.mp4';\r\nimport classes from './Guidelines.module.css';\r\nimport GuidelineVideo from '../Images/guidelines.mp4';\r\nconst guideLines = (props) => {\r\n    return(\r\n        <div>\r\n            <br />\r\n            <div onClick={props.click} className={classes.divlines}>\r\n            <h2 className={classes.name}>Guidelines</h2>\r\n            </div>\r\n            <br />\r\n            <div onClick={props.click}>\r\n            <div>\r\n            <video width=\"100%\" height=\"420\" controls >\r\n                <source src={GuidelineVideo}/>\r\n            </video>\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <div className={classes.divlines}>\r\n                <h2 className={classes.name}>Tribute</h2>    \r\n                </div>\r\n                <br />\r\n                <div>\r\n                <video width=\"100%\" height=\"420\" controls >\r\n                    <source src={Tribute}/>\r\n                </video>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default guideLines;","import React from 'react';\r\nimport classes from './Drawer.module.css';\r\n\r\nconst drawerToggleButton = (props) => {\r\n    return(\r\n        <button className={classes.toggleButton} onClick={props.click}>\r\n            <div className={classes.toggleButton_line}/>\r\n            <div className={classes.toggleButton_line}/>\r\n            <div className={classes.toggleButton_line}/>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default drawerToggleButton;","import React from 'react';\r\nimport image from '../Images/image.png'; \r\nimport classes from './Nav.module.css';\r\nimport DrawerToggle from '../SideBar/DrawerToggleButton';\r\n\r\nconst toolbar = (props) => {\r\nreturn(\r\n    <header>\r\n        <nav className={classes.nav_div}>\r\n            <div className={classes.nav_drawer}>\r\n                <DrawerToggle click = {props.handleSideDrawer}/>\r\n                </div>\r\n            <div className={classes.nav_logo}>\r\n            <img src={image}  alt=\"COVID-19\"/>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n}\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport {Link} from 'react-router-dom';\r\nconst sideDrawer = (props) => { \r\n    if(props.show){\r\n    return(\r\n        <nav className={classes.side_drawer}>\r\n            <ul className={classes.side_drawer_ul}>\r\n                <Link to =\"/\">\r\n                <li onClick={props.click}>Home</li>\r\n                </Link>\r\n                <Link to =\"/guidelines\">\r\n                <li onClick={props.click}>Guidelines</li>\r\n                </Link>\r\n            </ul>\r\n        </nav>\r\n    );\r\n    }\r\n    else {\r\n        return(\r\n            <nav className={classes.side_drawer_close}>\r\n                <ul className={classes.side_drawer_ul}>\r\n                    <li>Home</li>\r\n                    <li>Guidelines</li>\r\n                </ul>\r\n            </nav>\r\n        );  \r\n    }\r\n \r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './App.css';\r\nimport Home from './Components/Home';\r\nimport {BrowserRouter as Router, Switch,Route} from 'react-router-dom';\r\nimport GuideLines from './Components/Guidelines/Guidelines';\r\nimport Nav from './Components/Nav/Nav';\r\nimport SideDrawer from './Components/SideBar/SideDrawer';\r\nimport ParticlesBg from 'particles-bg';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      sideDrawer: false,\r\n    }\r\n  }\r\n  handleSideDrawer = () => {\r\n    this.setState((prevState) =>{\r\n      return {sideDrawer: !prevState.sideDrawer};\r\n      });\r\n    }\r\n\r\n  handleSideDrawerClose = () => {\r\n    this.setState({sideDrawer: false});\r\n  }\r\n  render(){\r\n    let config ={\r\n      position: \"fixed\",\r\n      zIndex: -7,\r\n      top: 0,\r\n      left: 0\r\n     }\r\n    return(\r\n      <Router>\r\n      <div>\r\n      <ParticlesBg type=\"circle\" color=\"#CCE0F4\" num={8} config={config} bg={true}/>  \r\n      <Nav handleSideDrawer = {this.handleSideDrawer}/>\r\n      <SideDrawer show={this.state.sideDrawer} click={this.handleSideDrawerClose}/>\r\n        <Switch>\r\n        <Route path=\"/guidelines\">\r\n          <GuideLines click={this.handleSideDrawerClose} />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home click={this.handleSideDrawerClose} />\r\n        </Route>\r\n        </Switch>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"oAt1CEQGyHUa1hddGkDi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"HTHAZEwi8oNLVoWGgPOeg\",\"divlines\":\"_1d2dZZdkAoJkCSrALx3zwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggleButton\":\"_3smERGGHcKzE6Am54K33ki\",\"toggleButton_line\":\"ZZ4RYTyGO-Y5qoD7pI50f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side_drawer\":\"_3KFFLxmycqo6iBfzvISpVn\",\"side_drawer_close\":\"_2UqZfUuOX2VCm8wjbE9K8\",\"side_drawer_ul\":\"_2Yj8pYKcwDW7fS68fBm5BG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2Bkn1EUxqpQ2CtQ0WOI7Yo\",\"formControl\":\"_3HnhPPGkrxF6cRwz73Wnze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_div\":\"_1FyLN33yEncdhtKj_VFbuy\",\"nav_logo\":\"_2mRHQ4qqp84u6_KGySSYXR\",\"nav_drawer\":\"_2cXgel9ePB9WlzriQAq1IL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_1h1fztc5lW5ZHjDNUjht_R\",\"bubbles\":\"_1873yJ_-GcXfpSAbv-lQeK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3b7EvobPtKFTGVHhsiHk5p\",\"formControl\":\"_16iuMvU9s3-cwA-29mlRbT\"};"],"sourceRoot":""}